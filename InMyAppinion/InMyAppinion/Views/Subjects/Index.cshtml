@model IEnumerable<InMyAppinion.Models.Subject>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
}

<h2>Svi predmeti</h2>

@if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
{
    <p>
        <a class="btn btn-primary" asp-action="Create">
            <span class="glyphicon glyphicon-plus"></span>  Dodaj novi predmet
        </a>
    </p>
}
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShortName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Faculty)
            </th>
            @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
            {
                <th>@Html.DisplayNameFor(model => model.Validated)</th>
            }
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.ID">
                    @Html.DisplayFor(modelItem => item.Name)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShortName)
            </td>
            <td>
                @item.Faculty.ShortName
            </td>
            @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
            {
                <td>@(item.Validated ? "Da" : "Ne")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Uredi</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Obriši</a>
                </td>
            }
        </tr>
}
    </tbody>
</table>
