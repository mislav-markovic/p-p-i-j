@model InMyAppinion.Models.SubjectViewModels.SubjectDetailViewModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <div class="container">
        <div class="resume">
            <header class="page-header">
                <h1 class="page-title">@Model.Name</h1>
                <h2 class="page-title">@Model.ShortName</h2>
            </header>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-offset-1 col-md-10 col-lg-offset-2 col-lg-8">
                    <div class="panel panel-default">
                        <div class="panel-heading resume-heading">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="col-xs-12">
                                        <ul class="list-group">
                                            <li class="list-group-item">@Model.Name</li>
                                            <li class="list-group-item">
                                                <div>@Model.Faculty.Name (@Model.Faculty.ShortName)</div>
                                            </li>
                                            <li class="list-group-item">
                                                @Model.Faculty.University.Name, @Model.Faculty.University.City.Name (@Model.Faculty.University.ShortName)
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="bs-callout bs-callout-danger">
                            <h4>@Html.DisplayNameFor(model => model.Description)</h4>
                            <p>
                                @Html.DisplayFor(model => model.Description)
                            </p>
                        </div>
                        <div class="bs-callout bs-callout-danger">
                            <h4>@Html.DisplayNameFor(model => model.SubjectTags)</h4>
                            @if (Model.SubjectTags.Count() != 0)
                            {
                                @foreach (var tag in Model.SubjectTags)
                                {
                                    <div>@tag.Name</div>
                                    if (!Model.SubjectTags.Last().Equals(tag))
                                    {
                                        @Html.Raw(", ")

                                    }
                                }
                            }
                            else
                            {
                                @Html.Raw("-")
                            }

                        </div>
                        <div class="bs-callout bs-callout-danger">
                            <h4>Ocjene</h4>
                            <ul class="list-group list-unstyled">
                                <li>
                                    <a class="list-group-item inactive-link" href="#">
                                        @foreach (var kvp in Model.Grades)
                                        {
                                            <div class="progress">
                                                <div data-placement="top"
                                                     style="width: @(kvp.Value.Percentage)%;"
                                                     aria-valuemax="10"
                                                     aria-valuemin="0"
                                                     aria-valuenow="@kvp.Value.Grade"
                                                     data-toggle="tooltip"
                                                     role="progressbar"
                                                     title="@kvp.Key"
                                                     class="progress-bar progress-bar-@(kvp.Value.Status)">

                                                    <span class="sr-only">@(kvp.Value.Percentage)%</span>
                                                    <span class="progress-type">@kvp.Key (@kvp.Value.Grade)</span>
                                                </div>
                                            </div>

                                        }
                                        <div class="progress-meter">
                                            <div style="width: 25%;" class="meter meter-left"><span class="meter-text">Lo&#353</span></div>
                                            <div style="width: 25%;" class="meter meter-left"><span class="meter-text">Onako</span></div>
                                            <div style="width: 25%;" class="meter meter-right"><span class="meter-text">Odli&#269</span></div>
                                            <div style="width: 25%;" class="meter meter-right"><span class="meter-text">Dobro</span></div>
                                        </div>
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="bs-callout bs-callout-danger">
                            <h4>Graf ukupne ocjene</h4>
                            <div id="chart1"></div>
                        </div>
                        <div class="bs-callout bs-callout-danger">
                            <h4>Najocjenjenije recenzije</h4>
                            <ul class="list-group list-unstyled">
                                @foreach (var review in Model.Reviews)
                                {
                                    <li>
                                        <div class="well">
                                            <div class="media">
                                                <a class="pull-left" href="#">
                                                    slika korisnika?
                                                    <img class="media-object" src="#">
                                                </a>
                                                <div class="media-body">
                                                    <h4 class="media-heading">@review.Title</h4>
                                                    <p class="text-right">@review.Author.UserName</p>
                                                    <p>
                                                        @Html.Raw(review.Text)
                                                    </p>
                                                    <hr />
                                                    <small>@Html.DisplayNameFor(model => model.AvgUsefulnessGrade)</small>
                                                    <div class="circle" id="circles-usefulness-@review.ID" style="display: inline"></div>
                                                    <small>@Html.DisplayNameFor(model => model.AvgDifficultyGrade)</small>
                                                    <div class="circle" id="circles-difficulty-@review.ID" style="display: inline"></div>
                                                    <small>@Html.DisplayNameFor(model => model.AvgInterestGrade)</small>
                                                    <div class="circle" id="circles-interest-@review.ID" style="display: inline"></div>
                                                    <hr />
                                                    Tagovi:
                                                    @foreach (var tag in review.SubjectReviewTagSet.Select(s => s.SubjectReviewTag))
                                                    {
                                                        <b class="btn btn-xs btn-info">@tag.Name </b>
                                                        @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
                                                        {
                                                            <button class="btn btn-default btn-xs deleteajax" data-tagid="@tag.ID" data-subjectid="@Model.ID" title="Obriši tag">
                                                                <span class="glyphicon glyphicon-minus"></span>
                                                            </button>
                                                        }
                                                    }
                                                    <ul class="list-inline list-unstyled">
                                                        <li><span><i class="glyphicon glyphicon-calendar"></i>@review.Timestamp</span></li>
                                                        <li>|</li>
                                                        <li>
                                                            <span>
                                                                <i class="glyphicon glyphicon-comment"></i>
                                                                <a asp-controller="SubjectReviews" asp-action="Details" asp-route-id="@review.ID">
                                                                    @review.Comments.Count comments
                                                                </a>
                                                            </span>
                                                        </li>
                                                        <li>|</li>
                                                        <li>
                                                            <div id="stars-@review.ID"><small>@review.TotalGrade</small></div>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="bs-callout bs-callout-danger">
                            <h4>Profesori</h4>
                            <table class="table table-striped table-responsive ">
                                <thead>
                                    <tr>
                                        <th>Profesor</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var prof in Model.Professors)
                                    {
                                        <tr>
                                            <td>
                                                @if (@prof.Validated) 
                                                {
                                                    <a asp-controller="Professors" asp-action="Details" asp-route-id="@prof.ID">@prof.FullName</a>
                                                } 
                                                else 
                                                {
                                                    @prof.FullName
                                                }
                                                
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
{
    <dt>
        @Html.DisplayNameFor(model => model.Validated)
    </dt>
            <dd>
                <form asp-action="Validate" method="post">
                    <input asp-for="@Model.Validated" data-subjectid="@Model.ID" class="editajax" />
                </form>
            </dd>
}

<div>
    @if(await AuthorizationService.AuthorizeAsync(User, "CanReview"))
    {
        <a asp-action="Create" asp-controller="SubjectReviews" asp-route-id="@Model.ID">Dodaj kritiku</a>@: |
    }
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<div id="chart1" style="height:200px;width:500px; "></div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            SetEditAjax(".editajax", '@Url.Action("Validate")','subjectid');
        });
    </script>

    <script>
        $(function () {
            SetDeleteAjax(".deleteajax", '@Url.Action("DeleteSubjectTagSet")', 'tagid', 'subjectid');
        });
    </script>

    <script>
        $(function () {
            GraphByYear("chart1", '@Url.Action("GradeByYear", "Rank", new { id=Model.ID, type="subject"})');
        });
    </script>


<script src="@Url.Content("~/lib/raty/lib/jquery.raty.js")"></script>

<script>
        @foreach (var review in Model.Reviews)
        {
           @: $("#stars-@review.ID").raty({
           @:         starType: 'i',
           @: halfShow: true,
           @: readOnly: true,
           @: size: 5,
           @: targetFormat: '{score}',
           @: score: @review.TotalGrade,
           @: hints: ['Lose', 'Dovoljno', 'Dobro', 'Vrlo dobro', 'Odlicno']
           @: });
        }

</script>

<script src="@Url.Content("~/lib/circles/circles.min.js")"></script>
<script>
        @foreach (var review in Model.Reviews)
            {
              @:   Circles.create({
              @:     id: 'circles-usefulness-@review.ID',
              @:     radius: 30,
              @:     value: @review.UsefulnessGrade,
              @:     maxValue: 5,
              @:     text: (value) => value,
              @:     colors: ['#D3B6C6', '#4B253A'],
              @:     duration: 1000,
              @:   });

              @:   Circles.create({
              @:     id: 'circles-difficulty-@review.ID',
              @:     radius: 30,
              @:     value: @review.DifficultyGrade,
              @:     maxValue: 5,
              @:     text: (value) => value,
              @:     colors: ['#D3B6C6', '#4B253A'],
              @:     duration: 1000,
              @:   });

              @:   Circles.create({
              @:     id: 'circles-interest-@review.ID',
              @:     radius: 30,
              @:     value: @review.InterestGrade,
              @:     maxValue: 5,
              @:     text: (value) => value,
              @:     colors: ['#D3B6C6', '#4B253A'],
              @:     duration: 1000,
              @:   });
            }
</script>
}

@section Styles {
    <link href="@Url.Content("~/css/profile.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/lib/raty/lib/jquery.raty.css")" rel="stylesheet" />
}
