@model InMyAppinion.Models.Subject
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Subject</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ShortName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ShortName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Faculty)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Faculty.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Professors)
        </dt>
        <dd>
            @foreach(var prof in Model.Professors)
            {
                <ul>
                    <li>
                        <a asp-action="Details" asp-controller="Professors" asp-route-id="@prof.ProfessorID">@prof.Professor.FullName</a>
                    </li>
                </ul>
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SubjectTagSet)
        </dt>
        <dd>
            @foreach (var tag in Model.SubjectTagSet)
            {
                <ul>
                    <li>
                        @tag.SubjectTag.Name
                    </li>
                </ul>
            }
        </dd>
        @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
        {
            <dt>
                @Html.DisplayNameFor(model => model.Validated)
            </dt>
            <dd>
                <form asp-action="Validate" method="post">
                    <input asp-for="@Model.Validated" data-subjectid="@Model.ID" class="editajax" />
                </form>
            </dd>
        }
        <dt>
            Kritike
        </dt>
        <dd>
            @foreach (var item in Model.Reviews)
            {
                <a asp-action="Details" asp-controller="SubjectReviews" asp-route-id="@item.ID">@item.TotalGrade</a>@: |
            }
        </dd>
        <dt>
            Područja
        </dt>
        <dd>
            @foreach (var item in Model.SubjectTagSet.Select(t => t.SubjectTag))
            {
                <span>
                    @Html.DisplayFor(modelItem => item.Name)
                    @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate")) {
                        <button class="btn btn-default btn-xs deleteajax" data-tagid="@item.ID" data-subjectid="@Model.ID" title="Obriši tag">
                        <span class="glyphicon glyphicon-minus"></span></button>
                    }
                    |
                </span>
            }
        </dd>
    </dl>
</div>
<div>
    @if(await AuthorizationService.AuthorizeAsync(User, "CanReview"))
    {
        <a asp-action="Create" asp-controller="SubjectReviews" asp-route-id="@Model.ID">Dodaj kritiku</a>@: |
    }
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<div id="chart1" style="height:200px;width:500px; "></div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            SetEditAjax(".editajax", '@Url.Action("Validate")','subjectid');
        });
    </script>

    <script>
        $(function () {
            SetDeleteAjax(".deleteajax", '@Url.Action("DeleteSubjectTagSet")', 'tagid', 'subjectid');
        });
    </script>

    <script>
        $(function () {
            GraphByYear("chart1", '@Url.Action("GradeByYear", "Rank", new { id=Model.ID, type="subject"})');
        });
    </script>
}
