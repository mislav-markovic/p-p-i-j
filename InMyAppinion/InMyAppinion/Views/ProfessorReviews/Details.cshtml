@model InMyAppinion.Models.ProfessorReview
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Recenzija";
}

<div class=row>
    <div class="col-md-6">
        <h2>@Model.Professor.FullName</h2>
    </div>
    @if(await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
    {
        <div class="col-md-2 margins">
            <form asp-action="Delete">
                <input type="hidden" name="id" value="@Model.ID" />
                <button type="submit" class="btn btn-danger del" title="Obriši recenziju">
                    <span class="glyphicon glyphicon-trash"></span>
                </button>
            </form>
        </div>
    }
</div>

<div>
    <hr />
    <div class="col-lg-6">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Text)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Text)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.QualityGrade)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.QualityGrade)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.InteractionGrade)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.InteractionGrade)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.HelpfulnessGrade)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.HelpfulnessGrade)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.MentorGrade)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.MentorGrade)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TotalGrade)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TotalGrade)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Points)
            </dt>
            <dd id="points">
                @Html.DisplayFor(model => model.Points)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Timestamp)
            </dt>
            <dd>
                @Model.Timestamp.Date.ToString("d")
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Author)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Author.UserName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Professor)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Professor.FirstName)

                @Html.DisplayFor(model => model.Professor.LastName)
            </dd>
            <dt>
                Tagovi
            </dt>
            <dd>
                @foreach (var t in Model.ProfessorReviewTagSet)
            {
                    <b class="btn btn-xs btn-info">@t.ProfessorReviewTag.Name</b>
                    
            }
            </dd>
        </dl>
        <hr />
        @if ((await AuthorizationService.AuthorizeAsync(User, "CanReview") && (User.Identity.Name != Model.Author.UserName)))
        {
            <button class="btn btn-lg btn-success voteajax" id="voteup" data-vote="true"><span class="glyphicon glyphicon-thumbs-up"></span></button>
            <button class="btn btn-lg btn-danger voteajax" id="votedown" data-vote="false"><span class="glyphicon glyphicon-thumbs-down"></span></button>
        }
        <input hidden id="voted" value="@ViewBag.voted" />
        <hr />
        @if (await AuthorizationService.AuthorizeAsync(User, "CanReview"))
        {
            <div class="clear">
                <textarea id="text" class="form-control" rows="3" data-text title="Unesite komentar"></textarea>
                <input hidden data-reviewId="@Model.ID" />
                <input hidden data-type="professor" />
                <input id="username" hidden value="@User.Identity.Name" /><br />
                <button class="btn btn-info addajax"><span class="glyphicon glyphicon-plus"></span>Dodaj komentar</button>
            </div>
        }
    </div>
    <h4>Komentari</h4>
    <div id="comments" class="col-lg-6" style="background-color:whitesmoke">
        @foreach (var c in Model.Comments)
        {
            <div id="@c.ID">
                @if (SignInManager.IsSignedIn(User) && (User.Identity.Name == c.Author.UserName ||
                    await AuthorizationService.AuthorizeAsync(User, "CanModerate")))
                {
                    <button data-commentid="@c.ID" data-userid="@c.AuthorID" class="pull-right btn btn-danger btn-xs deleteajax" title="Izbriši komentar">
                        <span class="glyphicon glyphicon-remove"></span>
                    </button>
                }
                <h5><span>@await UserManager.FindByIdAsync(c.AuthorID)</span>, @c.Timestamp, <span id="points-comment-@c.ID">@c.Points</span></h5>
                <p class="comment">@c.Text</p>
                @if (await AuthorizationService.AuthorizeAsync(User, "CanReview") && (User.Identity.Name != c.Author.UserName))
                {
                    <button class="btn btn-sm btn-success voteajax-comment glyphicon glyphicon-thumbs-up" id="voteup-comment-@c.ID" data-vote="true" data-commentid="@c.ID"></button>
                    <button class="btn btn-sm btn-danger voteajax-comment glyphicon glyphicon-thumbs-down" id="votedown-comment-@c.ID" data-vote="false" data-commentid="@c.ID"></button>
                }
                <input hidden id="comment-vote-@c.ID" class="comment-vote" data-commid="@c.ID" value="@ViewData[c.ID.ToString()]" />
                <hr />
            </div>
        }
    </div>
</div>
<div class="clear">
    <br />
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        $(function () {
            AddCommentAjax(".addajax", '@Url.Action("Create", "Comments", new { id=Model.ID, type="professor" })', 'text', 'username');
        });
    </script>

    <script>
        $(function () {
            DeleteCommentAjax(".deleteajax", '@Url.Action("Delete", "Comments", "")', 'commentid');
        });
    </script>

    <script>
        $(function () {
            VoteReview(".voteajax", '@Url.Action("VoteReview", "Votes", new { id=Model.ID, type="professor"})');
            VoteComment(".voteajax-comment", '@Url.Action("VoteComment", "Votes", "")', 'commentid');
        })
    </script>

    <script>
        $(document).ready(function () {
            var v = $("#voted").val();
            if(v === 'True'){
                $('#voteup').prop('disabled', true);
                $('#voteup').hide();
            }
            else if(v === 'False'){
                $('#votedown').prop('disabled', true);
                $('#votedown').hide();
            }
            $("#voted").remove();
        });
    </script>

    <script>
        $(document).ready(function () {
            var x = document.getElementsByClassName("comment-vote");
            var i;
            for (i = 0; i < x.length; i++) {
                var id = x[i].dataset.commid;
                var vote = $("#comment-vote-" + id).val();

                if (vote === 'True') {
                    $('#voteup-comment-'+id).prop('disabled', true);
                    $('#voteup-comment-' + id).hide();
                } else if (vote === 'False') {
                    $('#votedown-comment-' + id).prop('disabled', true);
                    $('#votedown-comment-' + id).hide();
                }
            }
        });
    </script>

    <script>
            $(document).ready(function () {
                $(".del").click(function () {
                    if (!confirm("Jeste li sigurni?")) {
                        return false;
                    }
                });
            });
    </script>
}
