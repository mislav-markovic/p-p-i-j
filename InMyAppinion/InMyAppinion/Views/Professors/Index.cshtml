@model IEnumerable<InMyAppinion.Models.Professor>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
}

<h2>Svi profesori</h2>

@if (await AuthorizationService.AuthorizeAsync(User, "CanReview"))
{
    <p>
        <a class="btn btn-primary" asp-action="Create">
            <span class="glyphicon glyphicon-plus"></span>  Dodaj novog profesora
        </a>
    </p>
}
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
            {
                <th>@Html.DisplayNameFor(model => model.Validated)</th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
            {
                <td>@(item.Validated ? "Da" : "Ne")</td>
            }
            @if (await AuthorizationService.AuthorizeAsync(User, "CanModerate"))
            {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            }
            else
            {
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID">Detalji</a>
                </td>
            }
        </tr>
}
    </tbody>
</table>
